generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./ERD.svg"
}

model Hospede {
  id          Int          @id @default(autoincrement())
  nome        String
  cpf         String       @unique
  email       String?      @unique
  telefone    String?
  profissao   String?
  rua         String
  bairro      String
  cidade      String
  estado      String
  complemento String?
  criadoEm    DateTime     @default(dbgenerated("(datetime('now','-3 hours'))"))
  Hospedagem  Hospedagem[]
  Reserva     Reserva[]
}

model Quarto {
  id          Int          @id @default(autoincrement())
  numero      Int
  tipo        String
  valorDiaria Float
  status      String
  Hospedagem  Hospedagem[]
  Reserva     Reserva[]
}

model Hospedagem {
  id              Int              @id @default(autoincrement())
  hospedeId       Int
  hospede         Hospede          @relation(fields: [hospedeId], references: [id], onDelete: Cascade)
  quartoId        Int
  quarto          Quarto           @relation(fields: [quartoId], references: [id], onDelete: Cascade)
  dataHoraEntrada DateTime
  dataHoraSaida   DateTime
  valorDiaria     Float
  formaPagamento  String
  descontos       Float            @default(0)
  acrescimos      Float            @default(0)
  observacoes     String?
  criadoEm        DateTime         @default(dbgenerated("(datetime('now','-3 hours'))"))
  Consumo_diario  Consumo_diario[]
}

model Produto {
  id             Int              @id @default(autoincrement())
  nome           String
  descricao      String?
  preco          Float
  quantidade     Int              @default(0)
  Consumo_diario Consumo_diario[]
}

model Consumo_diario {
  id             Int        @id @default(autoincrement())
  hospedagemId   Int
  produtoId      Int
  quantidade     Int
  valorUnitario  Float
  formaPagamento String
  criadoEm       DateTime   @default(dbgenerated("(datetime('now','-3 hours'))"))
  hospedagem     Hospedagem @relation(fields: [hospedagemId], references: [id], onDelete: Cascade)
  produto        Produto    @relation(fields: [produtoId], references: [id], onDelete: Cascade)
}

model Reserva {
  id              Int      @id @default(autoincrement())
  hospedeId       Int
  hospede         Hospede  @relation(fields: [hospedeId], references: [id], onDelete: Cascade)
  quartoId        Int
  quarto          Quarto   @relation(fields: [quartoId], references: [id], onDelete: Cascade)
  dataHoraInicial DateTime
  dataHoraFinal   DateTime
  formaPagamento  String
  status          String
  observacoes     String?
  criadoEm        DateTime @default(dbgenerated("(datetime('now','-3 hours'))"))
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}
